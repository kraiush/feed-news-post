services:
  todo-db:
    image: postgres:latest
    container_name: container_db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    expose:
      - "5432"
    ports:
      - '5432:5432'
    command: -p 5432
    networks:
      - spring-docker-network
  todo-redis:
    container_name: redis
    image: redis:latest
    ports:
      - '6379:6379'
    networks:
      - spring-docker-network
  kafka:
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    networks:
      - spring-docker-network
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    networks:
      - spring-docker-network
  todo-s3:
    image: minio/minio:latest
    container_name: s3
    environment:
      MINIO_ROOT_USER: s3admin
      MINIO_ROOT_PASSWORD: s3password
    command: server /data --console-address ':9001'
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - spring-docker-network

networks:
  spring-docker-network:
    driver: bridge